name: Build and Deploy - StudentPerks-Dev

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  actions: write

env:
  AZURE_WEBAPP_NAME: 'studentperks-dev'
  AZURE_WEBAPP_PACKAGE_PATH: './publish'
  DOTNET_VERSION: '9.x'
  SOLUTION_FILE: 'backend/StudentPerks.slnx'
  API_PROJECT: 'backend/src/SP.API/SP.API.csproj'
  PUBLISH_DIR: './publish'

jobs:
  build-and-test:
    name: Build And Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

      # Create appsettings.json with required configuration for EF migrations
      - name: Create temporary appsettings for migrations
        run: |
          cat > backend/src/SP.API/appsettings.json << 'EOF'
          {
            "ConnectionStrings": {
              "SpDbConnection": "${{ secrets.DB_CONNECTION_STRING }}"
            },
            "Jwt": {
              "Key": "${{ secrets.JWT__KEY }}",
              "Issuer": "${{ secrets.JWT__ISSUER }}",
              "Audience": "${{ secrets.JWT__AUDIENCE }}",
              "AccessTokenExpirationInMinutes": ${{ secrets.JWT__ACCESSTOKENEXPIRATIONINMINUTES }},
              "RefreshTokenExpirationInDays": ${{ secrets.JWT__REFRESHTOKENEXPIRATIONINDAYS }}
            },
            "ImageKit": {
              "PublicKey": "${{ secrets.IMAGEKIT__PUBLICKEY }}",
              "PrivateKey": "${{ secrets.IMAGEKIT__PRIVATEKEY }}",
              "UrlEndpoint": "${{ secrets.IMAGEKIT__URLENDPOINT }}"
            },
            "Frontend": {
              "Url": "https://your-frontend-url.com"
            },
            "Identity": {
              "Roles": ["Admin", "User"]
            },
            "Serilog": {
              "WriteTo": [
                {
                  "Name": "Console"
                }
              ]
            },
            "AllowedHosts": "*"
          }
          EOF

      # Add EF Core tools
      - name: Install EF Core CLI Tools
        run: dotnet tool install --global dotnet-ef

      # Apply database migrations with connection string
      - name: Apply EF Core Migrations
        run: |
          dotnet ef database update \
            --project backend/src/SP.API/SP.API.csproj \
            --connection "${{ secrets.DB_CONNECTION_STRING }}"
        env:
          ASPNETCORE_ENVIRONMENT: Development

      - name: Test
        run: dotnet test ${{ env.SOLUTION_FILE }} --configuration Release --no-restore --no-build --verbosity normal

      - name: Publish
        run: dotnet publish ${{ env.API_PROJECT }} --configuration Release --no-restore --no-build --output ${{ env.PUBLISH_DIR }}

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: studentperks-dev-artifact
          path: ${{ env.PUBLISH_DIR }}

  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: [ build-and-test ]

    steps:
      - name: Download Artifacts from build job
        uses: actions/download-artifact@v4
        with:
          name: studentperks-dev-artifact
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
